(function() {var implementors = {};
implementors["erasable"] = [];
implementors["ptr_union"] = [{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a>, B:&nbsp;<a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a>&gt; <a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a> for <a class=\"struct\" href=\"ptr_union/struct.Union2.html\" title=\"struct ptr_union::Union2\">Union2</a>&lt;A, B&gt;","synthetic":false,"types":["ptr_union::Union2"]},{"text":"impl&lt;A:&nbsp;<a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a>, B:&nbsp;<a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a>, C:&nbsp;<a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a>, D:&nbsp;<a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a>&gt; <a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a> for <a class=\"struct\" href=\"ptr_union/struct.Union4.html\" title=\"struct ptr_union::Union4\">Union4</a>&lt;A, B, C, D&gt;","synthetic":false,"types":["ptr_union::Union4"]}];
implementors["rc_borrow"] = [{"text":"impl&lt;'_, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a> for <a class=\"struct\" href=\"rc_borrow/struct.ArcBorrow.html\" title=\"struct rc_borrow::ArcBorrow\">ArcBorrow</a>&lt;'_, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"erasable/trait.Erasable.html\" title=\"trait erasable::Erasable\">Erasable</a>,&nbsp;</span>","synthetic":false,"types":["rc_borrow::ArcBorrow"]},{"text":"impl&lt;'_, T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a> for <a class=\"struct\" href=\"rc_borrow/struct.RcBorrow.html\" title=\"struct rc_borrow::RcBorrow\">RcBorrow</a>&lt;'_, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"erasable/trait.Erasable.html\" title=\"trait erasable::Erasable\">Erasable</a>,&nbsp;</span>","synthetic":false,"types":["rc_borrow::RcBorrow"]}];
implementors["rc_box"] = [{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a> for <a class=\"struct\" href=\"rc_box/struct.ArcBox.html\" title=\"struct rc_box::ArcBox\">ArcBox</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"erasable/trait.Erasable.html\" title=\"trait erasable::Erasable\">Erasable</a>,&nbsp;</span>","synthetic":false,"types":["rc_box::ArcBox"]},{"text":"impl&lt;T:&nbsp;?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"erasable/trait.ErasablePtr.html\" title=\"trait erasable::ErasablePtr\">ErasablePtr</a> for <a class=\"struct\" href=\"rc_box/struct.RcBox.html\" title=\"struct rc_box::RcBox\">RcBox</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"erasable/trait.Erasable.html\" title=\"trait erasable::Erasable\">Erasable</a>,&nbsp;</span>","synthetic":false,"types":["rc_box::RcBox"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()